"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _style = _interopRequireDefault(require("styled-jsx/style"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var Note = function Note(_ref) {
  var children = _ref.children,
      className = _ref.className,
      type = _ref.type,
      fill = _ref.fill,
      label = _ref.label,
      small = _ref.small,
      props = _objectWithoutProperties(_ref, ["children", "className", "type", "fill", "label", "small"]);

  // The default filled variant should be inverted colors
  if (fill && !type) {
    type = 'default';
  }

  return _react["default"].createElement("div", _extends({}, props, {
    className: _style["default"].dynamic([["1751806853", [fill ? '#900' : 'transparent']]]) + " " + (props.className != null && props.className || (0, _classnames["default"])('note', className, {
      small: small
    }) || "")
  }), label !== false && _react["default"].createElement("span", {
    className: _style["default"].dynamic([["1751806853", [fill ? '#900' : 'transparent']]])
  }, label && "".concat(label, ": ") || type === 'success' && "Success: " || type === 'error' && "Error: " || type === 'warning' && "Warning: " || "Note: "), children, _react["default"].createElement(_style["default"], {
    id: "1751806853",
    dynamic: [fill ? '#900' : 'transparent']
  }, ".note.__jsx-style-dynamic-selector{border-radius:5px;background:".concat(fill ? '#900' : 'transparent', ";border:1px solid #900;font-size:14px;line-height:1.8;color:#900fff;}.note__type.__jsx-style-dynamic-selector{text-transform:uppercase;font-weight:500;}.note.small.__jsx-style-dynamic-selector{padding:4px 8px;}")));
};

Note.propTypes = {
  children: _propTypes["default"].node,
  className: _propTypes["default"].string,
  hideLabel: _propTypes["default"].bool,
  type: _propTypes["default"].oneOf(['secondary', 'success', 'error', 'warning', 'default']),
  label: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].bool])
};
var _default = Note;
exports["default"] = _default;